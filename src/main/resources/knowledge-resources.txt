
1.  Crud Repository custom methods: https://docs.spring.io/spring-data/jpa/docs/current/reference/html/
2.  JPA Many-to-many mappings:
        https://hellokoding.com/jpa-many-to-many-relationship-mapping-example-with-spring-boot-maven-and-mysql/

3.  Search APIs pagination:
        https://howtodoinjava.com/spring-boot2/pagination-sorting-example/

4.  Controller IT:
        https://howtodoinjava.com/spring-boot2/testresttemplate-post-example/
        https://stackoverflow.com/questions/43341856/in-memory-database-configuration-hsqldb-for-integration-testing-in-spring-boot
        https://www.baeldung.com/spring-testing-separate-data-source

5.  "java.net.HttpRetryException: cannot retry due to server authentication, in streaming mode":
        https://stackoverflow.com/questions/16748969/java-net-httpretryexception-cannot-retry-due-to-server-authentication-in-strea
        https://github.com/spring-projects/spring-framework/issues/21321

6.   Error Handling:
        https://www.springboottutorial.com/spring-boot-exception-handling-for-rest-services

7. Security Config and Jsypt:
        https://stackoverflow.com/questions/37404703/spring-boot-how-to-hide-passwords-in-properties-file
        http://www.jasypt.org/cli.html
        http://www.jasypt.org/maven.html

   But you do not need to download or use the Jasypt dependency to use the CLI to encrypt the password. You can find
   the org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI in your Maven repo in com.melloware.
   You will not find this information anywhere on the internet because most of the people have copied and pasted the
   same stuff in their blogs.
